apiVersion: v1
kind: ServiceAccount
metadata:
  name: kiali
  labels:
    app: kiali
    version: master
---
apiVersion: v1
kind: Service
metadata:
  name: kiali
  labels:
    app: kiali
    version: master
spec:
  type: NodePort
  ports:
  - name: tcp
    protocol: TCP
    port: 20001
    nodePort: 32439
  selector:
    app: kiali
    version: master
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kiali
  labels:
    app: kiali
    version: master
spec:
  backend:
    serviceName: kiali
    servicePort: 20001
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kiali
  labels:
    app: kiali
    version: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kiali
      version: master
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: kiali
      labels:
        app: kiali
        version: master
    spec:
      serviceAccount: kiali
      containers:
      - image: kiali/kiali:v0.19
        name: kiali
        command:
        - "/opt/kiali/kiali"
        - "-config"
        - "/kiali-configuration/config.yaml"
        - "-v"
        - "4"
        env:
        - name: ACTIVE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: kiali-configuration
          mountPath: "/kiali-configuration"
        - name: kiali-cert
          mountPath: "/kiali-cert"
        - name: kiali-secret
          mountPath: "/kiali-secret"
      volumes:
      - name: kiali-configuration
        configMap:
          name: kiali
      - name: kiali-cert
        secret:
          secretName: istio.kiali-service-account
      - name: kiali-secret
        secret:
          secretName: kiali
          optional: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiali
  labels:
    app: kiali
    version: master
rules:
- apiGroups: ["batch"]
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups: [""]
  resources:
  - configmaps
  - namespaces
  - nodes
  - pods
  - endpoints
  - services
  - replicationcontrollers
  verbs:
  - get
  - list
  - watch
- apiGroups: ["extensions", "apps"]
  resources:
  - deployments
  - statefulsets
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups: ["config.istio.io"]
  resources:
  - rules
  - circonuses
  - deniers
  - fluentds
  - kubernetesenvs
  - listcheckers
  - memquotas
  - opas
  - prometheuses
  - rbacs
  - servicecontrols
  - solarwindses
  - stackdrivers
  - statsds
  - stdios
  - apikeys
  - authorizations
  - checknothings
  - kuberneteses
  - listentries
  - logentries
  - metrics
  - quotas
  - reportnothings
  - servicecontrolreports
  - quotaspecs
  - quotaspecbindings
  - handlers
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
- apiGroups: ["networking.istio.io"]
  resources:
  - virtualservices
  - destinationrules
  - serviceentries
  - gateways
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups: ["authentication.istio.io"]
  resources:
  - policies
  - meshpolicies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups: ["rbac.istio.io"]
  resources:
  - clusterrbacconfigs
  - serviceroles
  - servicerolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups: ["monitoring.kiali.io"]
  resources:
  - monitoringdashboards
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kiali
  labels:
    app: kiali
    version: master
roleRef:
  kind: ClusterRole
  name: kiali
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: kiali
  namespace: istio-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kiali
  labels:
    app: kiali
    version: master
  namespace: istio-system